[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-07-07 08:23:18 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-07-07 08:23:18 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-02 14:50:06 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'iCache' defined in class path resource [conf/app-beans.xml]: Initialization of bean failed; nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:549)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1282)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:518)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:499)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:224)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at runjettyrun.Bootstrap.main(Bootstrap.java:97)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:8)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:77)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:69)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate$5.doInSession(BaseMyBatisDao.java:234)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate.execute(BaseMyBatisDao.java:160)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate.selectList(BaseMyBatisDao.java:232)
	at com.cosim.core.db.GenericDao.getBySqlKey(GenericDao.java:173)
	at com.cosim.platform.dao.system.SubSystemDao.getLocalSystem(SubSystemDao.java:50)
	at com.cosim.platform.service.system.SubSystemService.getLocalSystem(SubSystemService.java:104)
	at com.cosim.platform.service.system.SubSystemService$$FastClassByCGLIB$$fdfa3d21.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)
	at com.cosim.platform.service.system.SubSystemService$$EnhancerByCGLIB$$e959c450.getLocalSystem(<generated>)
	at com.cosim.platform.service.system.SecurityUtil.loadRes(SecurityUtil.java:62)
	at com.cosim.core.web.security.HtSecurityMetadataSource.postProcessAfterInitialization(HtSecurityMetadataSource.java:268)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1461)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 22 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:593)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:393)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:74)
	... 44 more
[TZ] 2017-11-02 14:50:44 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'iCache' defined in class path resource [conf/app-beans.xml]: Initialization of bean failed; nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:549)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1282)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:518)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:499)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:224)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at runjettyrun.Bootstrap.main(Bootstrap.java:97)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:8)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:77)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:69)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate$5.doInSession(BaseMyBatisDao.java:234)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate.execute(BaseMyBatisDao.java:160)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate.selectList(BaseMyBatisDao.java:232)
	at com.cosim.core.db.GenericDao.getBySqlKey(GenericDao.java:173)
	at com.cosim.platform.dao.system.SubSystemDao.getLocalSystem(SubSystemDao.java:50)
	at com.cosim.platform.service.system.SubSystemService.getLocalSystem(SubSystemService.java:104)
	at com.cosim.platform.service.system.SubSystemService$$FastClassByCGLIB$$fdfa3d21.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)
	at com.cosim.platform.service.system.SubSystemService$$EnhancerByCGLIB$$e959c450.getLocalSystem(<generated>)
	at com.cosim.platform.service.system.SecurityUtil.loadRes(SecurityUtil.java:62)
	at com.cosim.core.web.security.HtSecurityMetadataSource.postProcessAfterInitialization(HtSecurityMetadataSource.java:268)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1461)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 22 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:593)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:393)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:74)
	... 44 more
[TZ] 2017-11-02 14:50:59 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'iCache' defined in class path resource [conf/app-beans.xml]: Initialization of bean failed; nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:549)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1282)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:518)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:499)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:224)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at runjettyrun.Bootstrap.main(Bootstrap.java:97)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:8)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:77)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:69)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate$5.doInSession(BaseMyBatisDao.java:234)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate.execute(BaseMyBatisDao.java:160)
	at com.cosim.core.mybatis.BaseMyBatisDao$SqlSessionTemplate.selectList(BaseMyBatisDao.java:232)
	at com.cosim.core.db.GenericDao.getBySqlKey(GenericDao.java:173)
	at com.cosim.platform.dao.system.SubSystemDao.getLocalSystem(SubSystemDao.java:50)
	at com.cosim.platform.service.system.SubSystemService.getLocalSystem(SubSystemService.java:104)
	at com.cosim.platform.service.system.SubSystemService$$FastClassByCGLIB$$fdfa3d21.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)
	at com.cosim.platform.service.system.SubSystemService$$EnhancerByCGLIB$$e959c450.getLocalSystem(<generated>)
	at com.cosim.platform.service.system.SecurityUtil.loadRes(SecurityUtil.java:62)
	at com.cosim.core.web.security.HtSecurityMetadataSource.postProcessAfterInitialization(HtSecurityMetadataSource.java:268)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1461)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 22 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.cosim.platform.model.system.SubSystem.getLocalSystem
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:593)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:393)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:74)
	... 44 more
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-02 14:52:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-02 14:52:28 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-02 14:53:27 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-02 14:53:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-02 14:53:28 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-02 14:56:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-02 14:56:12 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-02 14:56:32 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='devadmin' 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 08:34:39 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 08:34:40 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 08:54:11 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in file [D:\work\aop-htx3-core\target\classes\com\cosim\platform\dao\system\DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 24 more
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:85)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.afterPropertiesSet(SqlSessionFactoryFactoryBean.java:51)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	... 33 more
Caused by: java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:83)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:62)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:81)
	... 36 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:69)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:154)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:142)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:137)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:79)
	... 38 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:85)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:93)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:67)
	... 42 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:173)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:72)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:235)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:81)
	... 44 more
[TZ] 2017-11-03 08:58:01 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 08:58:01 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 08:58:01 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 08:58:01 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 08:58:01 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 08:58:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 08:58:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 08:58:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 08:58:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 08:58:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 08:58:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 08:58:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 08:58:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 08:58:02 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 09:09:38 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in file [D:\work\aop-htx3-core\target\classes\com\cosim\platform\dao\system\DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 24 more
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:80)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.afterPropertiesSet(SqlSessionFactoryFactoryBean.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	... 33 more
Caused by: java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:83)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:62)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:76)
	... 36 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:69)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:154)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:142)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:137)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:79)
	... 38 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:85)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:93)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:67)
	... 42 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:173)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:72)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:235)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:81)
	... 44 more
[TZ] 2017-11-03 09:10:49 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cosim.core.cache.impl.MemoryCache] for bean with name 'iCache' defined in class path resource [conf/app-beans.xml]; nested exception is java.lang.ClassNotFoundException: com.cosim.core.cache.impl.MemoryCache
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cosim.core.cache.impl.MemoryCache] for bean with name 'iCache' defined in class path resource [conf/app-beans.xml]; nested exception is java.lang.ClassNotFoundException: com.cosim.core.cache.impl.MemoryCache
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1331)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:316)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:857)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 26 more
Caused by: java.lang.ClassNotFoundException: com.cosim.core.cache.impl.MemoryCache
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 40 more
[TZ] 2017-11-03 09:16:33 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.hotent.core.cache.impl.MemoryCache] for bean with name 'iCache' defined in class path resource [conf/app-beans.xml]; nested exception is java.lang.ClassNotFoundException: com.hotent.core.cache.impl.MemoryCache
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.hotent.core.cache.impl.MemoryCache] for bean with name 'iCache' defined in class path resource [conf/app-beans.xml]; nested exception is java.lang.ClassNotFoundException: com.hotent.core.cache.impl.MemoryCache
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1331)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:316)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:857)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 26 more
Caused by: java.lang.ClassNotFoundException: com.hotent.core.cache.impl.MemoryCache
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 40 more
[TZ] 2017-11-03 09:17:22 ERROR Digester       : Parse Error at line 2 column 17: 文档无效: 找不到语法。
org.xml.sax.SAXParseException; lineNumber: 2; columnNumber: 17; 文档无效: 找不到语法。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:228)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.commons.validator.ValidatorResources.<init>(ValidatorResources.java:156)
	at org.springmodules.validation.commons.DefaultValidatorFactory.setValidationConfigLocations(DefaultValidatorFactory.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1154)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:924)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1393)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
[TZ] 2017-11-03 09:17:22 ERROR Digester       : Parse Error at line 2 column 17: 文档根元素 "form-validation" 必须匹配 DOCTYPE 根 "null"。
org.xml.sax.SAXParseException; lineNumber: 2; columnNumber: 17; 文档根元素 "form-validation" 必须匹配 DOCTYPE 根 "null"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:234)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.commons.validator.ValidatorResources.<init>(ValidatorResources.java:156)
	at org.springmodules.validation.commons.DefaultValidatorFactory.setValidationConfigLocations(DefaultValidatorFactory.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1154)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:924)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1393)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
[TZ] 2017-11-03 09:17:22 ERROR Digester       : Parse Error at line 4 column 17: 文档无效: 找不到语法。
org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 17; 文档无效: 找不到语法。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:228)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.commons.validator.ValidatorResources.<init>(ValidatorResources.java:156)
	at org.springmodules.validation.commons.DefaultValidatorFactory.setValidationConfigLocations(DefaultValidatorFactory.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1154)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:924)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1393)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
[TZ] 2017-11-03 09:17:22 ERROR Digester       : Parse Error at line 4 column 17: 文档根元素 "form-validation" 必须匹配 DOCTYPE 根 "null"。
org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 17; 文档根元素 "form-validation" 必须匹配 DOCTYPE 根 "null"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:234)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.commons.validator.ValidatorResources.<init>(ValidatorResources.java:156)
	at org.springmodules.validation.commons.DefaultValidatorFactory.setValidationConfigLocations(DefaultValidatorFactory.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1154)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:924)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1393)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
[TZ] 2017-11-03 09:17:22 ERROR Digester       : Parse Error at line 2 column 17: 文档无效: 找不到语法。
org.xml.sax.SAXParseException; lineNumber: 2; columnNumber: 17; 文档无效: 找不到语法。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:228)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.commons.validator.ValidatorResources.<init>(ValidatorResources.java:156)
	at org.springmodules.validation.commons.DefaultValidatorFactory.setValidationConfigLocations(DefaultValidatorFactory.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1154)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:924)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1393)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
[TZ] 2017-11-03 09:17:22 ERROR Digester       : Parse Error at line 2 column 17: 文档根元素 "form-validation" 必须匹配 DOCTYPE 根 "null"。
org.xml.sax.SAXParseException; lineNumber: 2; columnNumber: 17; 文档根元素 "form-validation" 必须匹配 DOCTYPE 根 "null"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:234)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.commons.validator.ValidatorResources.<init>(ValidatorResources.java:156)
	at org.springmodules.validation.commons.DefaultValidatorFactory.setValidationConfigLocations(DefaultValidatorFactory.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1154)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:924)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1393)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
[TZ] 2017-11-03 09:17:22 ERROR Digester       : Parse Error at line 40 column 17: 文档无效: 找不到语法。
org.xml.sax.SAXParseException; lineNumber: 40; columnNumber: 17; 文档无效: 找不到语法。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:228)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.commons.validator.ValidatorResources.<init>(ValidatorResources.java:156)
	at org.springmodules.validation.commons.DefaultValidatorFactory.setValidationConfigLocations(DefaultValidatorFactory.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1154)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:924)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1393)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
[TZ] 2017-11-03 09:17:22 ERROR Digester       : Parse Error at line 40 column 17: 文档根元素 "form-validation" 必须匹配 DOCTYPE 根 "null"。
org.xml.sax.SAXParseException; lineNumber: 40; columnNumber: 17; 文档根元素 "form-validation" 必须匹配 DOCTYPE 根 "null"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:234)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.commons.validator.ValidatorResources.<init>(ValidatorResources.java:156)
	at org.springmodules.validation.commons.DefaultValidatorFactory.setValidationConfigLocations(DefaultValidatorFactory.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1154)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:924)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1393)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 09:17:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 09:17:23 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 09:23:25 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in file [D:\work\aop-htx3-core\target\classes\com\cosim\platform\dao\system\DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 24 more
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\aop-htx3-core\target\classes\com\casic\platform\maper\SysAuditExt.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:80)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.afterPropertiesSet(SqlSessionFactoryFactoryBean.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	... 33 more
Caused by: java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:83)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:62)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:76)
	... 36 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:69)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:154)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:142)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:137)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:79)
	... 38 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.platform.model.audit.SysAuditExt'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:85)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:93)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:67)
	... 42 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.casic.platform.model.audit.SysAuditExt
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:173)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:72)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:235)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:81)
	... 44 more
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 09:41:42 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 09:41:43 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 09:50:19 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 09:50:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 09:50:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:50:19 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 09:50:19 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 09:50:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 09:50:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:50:20 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 09:50:20 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 09:50:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 09:50:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 09:50:20 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 09:50:20 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 09:50:20 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:07:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:07:38 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:11:14 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:11:14 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:12:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:12:03 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:12:03 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:12:03 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:12:03 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:15:50 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:15:50 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:19:29 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:19:29 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:20:49 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionService' defined in file [D:\work\aop-htx3-core\target\classes\com\cosim\platform\service\system\DemensionService.class]: Initialization of bean failed; nested exception is org.springframework.aop.framework.AopConfigException: Cannot proxy target class because CGLIB2 is not available. Add CGLIB to the class path or specify proxy interfaces.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.aop.framework.AopConfigException: Cannot proxy target class because CGLIB2 is not available. Add CGLIB to the class path or specify proxy interfaces.
	at org.springframework.aop.framework.DefaultAopProxyFactory.createAopProxy(DefaultAopProxyFactory.java:67)
	at org.springframework.aop.framework.ProxyCreatorSupport.createAopProxy(ProxyCreatorSupport.java:104)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:112)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:476)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:362)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:322)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1461)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 24 more
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:22:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:22:34 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:23:13 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:23:13 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:23:56 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:23:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:23:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:23:56 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:23:56 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:23:57 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:23:57 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:23:57 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:23:57 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:23:57 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:23:57 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:23:57 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:23:57 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:23:57 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 10:34:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 10:34:12 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 11:07:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 11:07:23 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 11:22:29 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 11:22:29 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 11:33:21 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 11:33:21 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 12:51:07 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 12:51:07 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 12:58:59 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 12:58:59 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 12:58:59 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:58:59 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 12:58:59 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 12:59:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 12:59:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:59:00 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 12:59:00 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 12:59:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 12:59:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:59:00 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 12:59:00 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 12:59:00 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 12:59:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 12:59:44 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:00:55 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:00:55 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:02:56 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:02:56 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:04:31 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:04:32 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:04:32 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:04:32 ERROR SpringMvcServlet: Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter#0' defined in class path resource [conf/app-action.xml]: Cannot create inner bean 'org.springframework.http.converter.json.MappingJacksonHttpMessageConverter#80f1151' of type [org.springframework.http.converter.json.MappingJacksonHttpMessageConverter] while setting bean property 'messageConverters' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.http.converter.json.MappingJacksonHttpMessageConverter#80f1151' defined in class path resource [conf/app-action.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.http.converter.json.MappingJacksonHttpMessageConverter]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/codehaus/jackson/map/ObjectMapper
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:282)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:121)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:354)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:631)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:588)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:508)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:449)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:133)
	at javax.servlet.GenericServlet.init(GenericServlet.java:242)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:519)
	at org.eclipse.jetty.servlet.ServletHolder.doStart(ServletHolder.java:331)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:747)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:265)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.http.converter.json.MappingJacksonHttpMessageConverter#80f1151' defined in class path resource [conf/app-action.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.http.converter.json.MappingJacksonHttpMessageConverter]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/codehaus/jackson/map/ObjectMapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:997)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:943)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:271)
	... 34 more
Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.http.converter.json.MappingJacksonHttpMessageConverter]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/codehaus/jackson/map/ObjectMapper
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:162)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:990)
	... 38 more
Caused by: java.lang.NoClassDefFoundError: org/codehaus/jackson/map/ObjectMapper
	at org.springframework.http.converter.json.MappingJacksonHttpMessageConverter.<init>(MappingJacksonHttpMessageConverter.java:54)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 40 more
Caused by: java.lang.ClassNotFoundException: org.codehaus.jackson.map.ObjectMapper
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	... 46 more
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:08:28 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:08:28 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:09:31 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:09:31 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:10:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:10:23 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:11:03 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:11:04 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:11:04 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:11:04 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:11:04 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:11:04 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:23:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:23:02 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:25:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:25:46 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:26:22 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:27:10 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:27:11 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:27:11 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:29:49 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:29:50 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:30:33 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:30:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:30:34 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:37:26 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in file [D:\work\aop-htx3-core\target\classes\com\cosim\platform\dao\system\DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.logicalcobwebs.proxool.ProxoolDataSource] for bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: org.logicalcobwebs.proxool.ProxoolDataSource
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.logicalcobwebs.proxool.ProxoolDataSource] for bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: org.logicalcobwebs.proxool.ProxoolDataSource
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:329)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 24 more
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.logicalcobwebs.proxool.ProxoolDataSource] for bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: org.logicalcobwebs.proxool.ProxoolDataSource
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:433)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	... 36 more
Caused by: java.lang.ClassNotFoundException: org.logicalcobwebs.proxool.ProxoolDataSource
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 42 more
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:45:25 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:45:25 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 13:47:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 13:47:02 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 14:50:04 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 14:50:04 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 15:04:19 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 15:04:19 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 15:08:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 15:08:39 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 15:13:35 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 15:13:36 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 15:22:14 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 15:22:15 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 15:49:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 15:49:43 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 15:58:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 15:58:23 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 16:37:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 16:37:46 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 16:40:43 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 16:40:43 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 16:42:13 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in file [D:\work\aop-htx3-core\target\classes\com\cosim\platform\dao\system\DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]: Initialization of bean failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [net.sf.log4jdbc.DataSourceSpyInterceptor] for bean with name 'log4jdbcInterceptor' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]: Initialization of bean failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [net.sf.log4jdbc.DataSourceSpyInterceptor] for bean with name 'log4jdbcInterceptor' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:329)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]: Initialization of bean failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [net.sf.log4jdbc.DataSourceSpyInterceptor] for bean with name 'log4jdbcInterceptor' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	... 36 more
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [net.sf.log4jdbc.DataSourceSpyInterceptor] for bean with name 'log4jdbcInterceptor' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:433)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.resolveInterceptorNames(AbstractAutoProxyCreator.java:558)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:520)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:463)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:362)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:322)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1461)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 42 more
Caused by: java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 55 more
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 16:51:13 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 16:51:14 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-03 16:55:27 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springmodules.validation.commons.ConfigurableBeanValidator] for bean with name 'confValidator' defined in class path resource [conf/app-beans.xml]; nested exception is java.lang.ClassNotFoundException: org.springmodules.validation.commons.ConfigurableBeanValidator
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springmodules.validation.commons.ConfigurableBeanValidator] for bean with name 'confValidator' defined in class path resource [conf/app-beans.xml]; nested exception is java.lang.ClassNotFoundException: org.springmodules.validation.commons.ConfigurableBeanValidator
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1331)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:316)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:857)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 26 more
Caused by: java.lang.ClassNotFoundException: org.springmodules.validation.commons.ConfigurableBeanValidator
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 40 more
[TZ] 2017-11-03 16:56:35 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springmodules.validation.commons.DefaultValidatorFactory] for bean with name 'validatorFactory' defined in class path resource [conf/app-beans.xml]; nested exception is java.lang.ClassNotFoundException: org.springmodules.validation.commons.DefaultValidatorFactory
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springmodules.validation.commons.DefaultValidatorFactory] for bean with name 'validatorFactory' defined in class path resource [conf/app-beans.xml]; nested exception is java.lang.ClassNotFoundException: org.springmodules.validation.commons.DefaultValidatorFactory
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1331)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:316)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:857)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 26 more
Caused by: java.lang.ClassNotFoundException: org.springmodules.validation.commons.DefaultValidatorFactory
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 40 more
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-03 16:57:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-03 16:57:45 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-06 08:48:45 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-06 08:48:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-06 08:48:46 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-06 08:48:46 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-06 08:51:19 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in file [D:\work\aop-htx3-core\target\classes\com\cosim\platform\dao\system\DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]: Initialization of bean failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [net.sf.log4jdbc.DataSourceSpyInterceptor] for bean with name 'log4jdbcInterceptor' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]: Initialization of bean failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [net.sf.log4jdbc.DataSourceSpyInterceptor] for bean with name 'log4jdbcInterceptor' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:329)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [conf/app-resources.xml]: Initialization of bean failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [net.sf.log4jdbc.DataSourceSpyInterceptor] for bean with name 'log4jdbcInterceptor' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	... 36 more
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [net.sf.log4jdbc.DataSourceSpyInterceptor] for bean with name 'log4jdbcInterceptor' defined in class path resource [conf/app-resources.xml]; nested exception is java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:433)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.resolveInterceptorNames(AbstractAutoProxyCreator.java:558)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:520)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:463)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:362)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:322)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:407)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1461)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 42 more
Caused by: java.lang.ClassNotFoundException: net.sf.log4jdbc.DataSourceSpyInterceptor
	at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 55 more
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-06 09:20:38 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-06 09:20:38 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-06 09:25:23 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-06 09:25:23 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-06 10:26:02 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-06 10:26:02 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-06 10:29:44 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-06 10:29:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-06 10:29:45 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-06 10:30:09 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-06 10:30:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-06 10:30:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-06 10:30:10 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-06 10:30:10 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-06 10:30:10 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-06 10:30:38 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='devadmin' 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2017-11-06 10:31:10 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2017-11-06 10:31:11 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        'role_sys_admin','role_tenant_admin','第三方子系统演示_cloud_confadmin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        'role_sys_admin','role_tenant_admin','第三方子系统演示_cloud_confadmin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2017-11-06 10:31:11 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2017-11-06 10:31:15 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2017-11-06 10:31:15 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        sys_msg_send send 
    left join
        sys_msg_read red 
            on send.id=red.messageid  
            and red.receiverid=1 ,
        sys_msg_receiver rece 
    where
        send.id=rece.messageid 
        and (
            rece.receiverid  in (
                select
                    orgid 
                from
                    sys_user_org 
                where
                    userid = 1
            ) 
            or rece.receiverid=1 
        ) 
[TZ] 2017-11-06 10:31:15 INFO  sqlonly        : 
    select
        send.id id,send.subject subject, send.userName userName, send.messageType messageType,  send.sendTime sendTime, send.canReply canReply, send.receiverName receiverName, rece.id rid,  red.receivetime 
    from
        sys_msg_send send 
    left join
        sys_msg_read red 
            on send.id=red.messageid  
            and red.RECEIVERID=1 ,
        sys_msg_receiver rece 
    where
        send.id=rece.messageid 
        and (
            rece.receiverId  in (
                select
                    orgId 
                from
                    sys_user_org 
                where
                    userId = 1
            ) 
            or rece.receiverid=1 
        ) 
    order by
        send.id  desc limit 10 
[TZ] 2017-11-06 10:31:15 INFO  sqlonly        : 
    SELECT
        PAURID,PAURNAME,ALIASNAME,PAURVALUE,USERID 
    FROM
        SYS_PAUR 
    WHERE
        USERID=1 
        AND ALIASNAME='skin'  
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-09 08:52:55 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-09 08:52:55 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2017-11-09 08:58:52 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in URL [jar:file:/D:/iot_work/2.0.0/aop-webaapp-hplus_2.0/src/main/webapp/libs/aop-htx3-core-2.0.0.jar!/com/cosim/platform/dao/system/DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\iot_work\2.0.0\aop-webaapp-hplus_2.0\target\classes\com\casic\demo\maper\Course.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.demo.model.course.Course'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.demo.model.course.Course
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\iot_work\2.0.0\aop-webaapp-hplus_2.0\target\classes\com\casic\demo\maper\Course.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.demo.model.course.Course'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.demo.model.course.Course
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 24 more
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\iot_work\2.0.0\aop-webaapp-hplus_2.0\target\classes\com\casic\demo\maper\Course.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.demo.model.course.Course'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.demo.model.course.Course
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:80)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.afterPropertiesSet(SqlSessionFactoryFactoryBean.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	... 33 more
Caused by: java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.demo.model.course.Course'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.demo.model.course.Course
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:83)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:62)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:76)
	... 36 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.demo.model.course.Course'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.demo.model.course.Course
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:69)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:154)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:142)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:137)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:79)
	... 38 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.casic.demo.model.course.Course'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.casic.demo.model.course.Course
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:85)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:93)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:67)
	... 42 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.casic.demo.model.course.Course
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:173)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:72)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:235)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:81)
	... 44 more
[TZ] 2017-11-09 09:01:48 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in URL [jar:file:/D:/iot_work/2.0.0/aop-webaapp-hplus_2.0/src/main/webapp/libs/aop-htx3-core-2.0.0.jar!/com/cosim/platform/dao/system/DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is java.lang.UnsupportedClassVersionError: com/casic/demo/model/course/Course : Unsupported major.minor version 52.0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:771)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:763)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:706)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:277)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at runjettyrun.Bootstrap.main(Bootstrap.java:80)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is java.lang.UnsupportedClassVersionError: com/casic/demo/model/course/Course : Unsupported major.minor version 52.0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 24 more
Caused by: java.lang.UnsupportedClassVersionError: com/casic/demo/model/course/Course : Unsupported major.minor version 52.0
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:421)
	at runjettyrun.ProjectClassLoader.loadClass(ProjectClassLoader.java:92)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:270)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:161)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:72)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:235)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:81)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:93)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:67)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:154)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:142)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:137)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:79)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:62)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:76)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.afterPropertiesSet(SqlSessionFactoryFactoryBean.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	... 33 more
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2017-11-09 09:03:00 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2017-11-09 09:03:00 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-14 19:30:48 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-14 19:30:48 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-14 19:30:48 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-14 19:30:48 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-14 19:30:48 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-14 19:30:49 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-14 19:30:49 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-14 19:53:42 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 50 more
[TZ] 2018-08-14 19:59:55 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 50 more
[TZ] 2018-08-14 20:07:22 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 50 more
[TZ] 2018-08-14 20:53:27 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 50 more
[TZ] 2018-08-14 21:14:39 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:435)
	at org.mortbay.jetty.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:394)
	at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:685)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:551)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403)
	at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:353)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 24 more
[TZ] 2018-08-14 21:14:42 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:435)
	at org.mortbay.jetty.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:394)
	at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:685)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:551)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403)
	at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:353)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 24 more
[TZ] 2018-08-14 21:14:45 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:435)
	at org.mortbay.jetty.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:394)
	at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:685)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:551)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403)
	at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:353)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 24 more
[TZ] 2018-08-14 21:15:24 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 50 more
[TZ] 2018-08-14 21:21:43 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 50 more
[TZ] 2018-08-14 21:26:06 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load bean class: com.cosim.platform.service.bpm.impl.BpmActService; nested exception is java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:293)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:227)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:623)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.io.FileNotFoundException: class path resource [org/activiti/engine/impl/ServiceImpl.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:80)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:101)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:76)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:256)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:148)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:125)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:289)
	... 50 more
[TZ] 2018-08-16 09:53:35 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionDao' defined in URL [jar:file:/D:/eclipse_work/cosim-aop/aop-webaapp-hplus_2.0-master/src/main/webapp/libs/aop-htx3-core-2.0.0.jar!/com/cosim/platform/dao/system/DemensionDao.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'URL [jar:file:/D:/eclipse_work/cosim-aop/aop-webaapp-hplus_2.0-master/src/main/webapp/libs/aop-htx3-bpm-2.0.0.jar!/com/cosim/platform/maper/BizDef.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.hotent.platform.model.biz.BizDef'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.hotent.platform.model.biz.BizDef
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [conf/app-resources.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'URL [jar:file:/D:/eclipse_work/cosim-aop/aop-webaapp-hplus_2.0-master/src/main/webapp/libs/aop-htx3-bpm-2.0.0.jar!/com/cosim/platform/maper/BizDef.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.hotent.platform.model.biz.BizDef'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.hotent.platform.model.biz.BizDef
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 55 more
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'URL [jar:file:/D:/eclipse_work/cosim-aop/aop-webaapp-hplus_2.0-master/src/main/webapp/libs/aop-htx3-bpm-2.0.0.jar!/com/cosim/platform/maper/BizDef.map.xml]'; nested exception is java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.hotent.platform.model.biz.BizDef'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.hotent.platform.model.biz.BizDef
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:80)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.afterPropertiesSet(SqlSessionFactoryFactoryBean.java:46)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	... 64 more
Caused by: java.lang.RuntimeException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.hotent.platform.model.biz.BizDef'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.hotent.platform.model.biz.BizDef
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:83)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:62)
	at com.cosim.core.mybatis.SqlSessionFactoryFactoryBean.createSqlSessionFactory(SqlSessionFactoryFactoryBean.java:76)
	... 67 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class . Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.hotent.platform.model.biz.BizDef'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.hotent.platform.model.biz.BizDef
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:69)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:154)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:142)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:137)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:79)
	... 69 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.hotent.platform.model.biz.BizDef'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.hotent.platform.model.biz.BizDef
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:85)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:93)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:67)
	... 73 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.hotent.platform.model.biz.BizDef
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:173)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:72)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:235)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:81)
	... 75 more
[TZ] 2018-08-16 10:00:15 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:00:16 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bizInstanceSegmentService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 70 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 83 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 96 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 109 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 122 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 135 more
[TZ] 2018-08-16 10:04:15 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ldapGroupDaoImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [org.springframework.ldap.core.LdapTemplate] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [org.springframework.ldap.core.LdapTemplate] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
[TZ] 2018-08-16 10:13:44 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:13:44 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bizInstanceSegmentService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 70 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 83 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 96 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 109 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 122 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.engine.GroovyScriptEngine] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 135 more
[TZ] 2018-08-16 10:18:32 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:18:33 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bizInstanceSegmentService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.form.PermissionSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.form.PermissionSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.form.PermissionSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 70 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeSetService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.form.PermissionSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 83 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmDefinitionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.form.PermissionSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 96 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormDefService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.form.PermissionSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 109 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmFormHandlerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.form.PermissionSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 122 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.form.PermissionSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 135 more
[TZ] 2018-08-16 10:23:28 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:23:28 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bizInstanceSegmentService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeUserService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.bpm.BpmNodeUserCalculationSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeUserService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.bpm.BpmNodeUserCalculationSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeUserService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.bpm.BpmNodeUserCalculationSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 70 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmNodeUserService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.bpm.BpmNodeUserCalculationSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 83 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.bpm.BpmNodeUserCalculationSelector] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 96 more
[TZ] 2018-08-16 10:29:07 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:29:07 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bizInstanceSegmentService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.jms.MessageProducer] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processRunService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.jms.MessageProducer] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.jms.MessageProducer] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 70 more
[TZ] 2018-08-16 10:32:21 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from relative location [app-jms.xml]
Offending resource: class path resource [conf/app-context.xml]; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from URL [file:/D:/eclipse_work/cosim-aop/aop-webaapp-hplus_2.0-master/target/classes/conf/app-jms.xml]; nested exception is java.io.FileNotFoundException: D:\eclipse_work\cosim-aop\aop-webaapp-hplus_2.0-master\target\classes\conf\app-jms.xml (系统找不到指定的文件。)
	at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:76)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:271)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:196)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:181)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:140)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:131)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:530)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:444)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:435)
	at org.mortbay.jetty.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:394)
	at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:685)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:551)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403)
	at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:353)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from URL [file:/D:/eclipse_work/cosim-aop/aop-webaapp-hplus_2.0-master/target/classes/conf/app-jms.xml]; nested exception is java.io.FileNotFoundException: D:\eclipse_work\cosim-aop\aop-webaapp-hplus_2.0-master\target\classes\conf\app-jms.xml (系统找不到指定的文件。)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:341)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:260)
	... 37 more
Caused by: java.io.FileNotFoundException: D:\eclipse_work\cosim-aop\aop-webaapp-hplus_2.0-master\target\classes\conf\app-jms.xml (系统找不到指定的文件。)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:97)
	at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)
	at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)
	at org.springframework.core.io.UrlResource.getInputStream(UrlResource.java:125)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:328)
	... 41 more
[TZ] 2018-08-16 10:33:52 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from relative location [app-jms.xml]
Offending resource: class path resource [conf/app-context.xml]; nested exception is org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Unable to locate Spring NamespaceHandler for XML schema namespace [http://activemq.apache.org/schema/core]
Offending resource: class path resource [conf/app-jms.xml]

	at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:76)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:271)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:196)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:181)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:140)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:131)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:530)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:444)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Unable to locate Spring NamespaceHandler for XML schema namespace [http://activemq.apache.org/schema/core]
Offending resource: class path resource [conf/app-jms.xml]

	at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:80)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.error(BeanDefinitionParserDelegate.java:316)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1420)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1413)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:184)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:140)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:255)
	... 63 more
[TZ] 2018-08-16 10:42:32 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from relative location [app-jms.xml]
Offending resource: class path resource [conf/app-context.xml]; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from class path resource [conf/app-jms.xml]; nested exception is org.springframework.beans.FatalBeanException: NamespaceHandler class [org.apache.xbean.spring.context.v2.XBeanNamespaceHandler] for namespace [http://activemq.apache.org/schema/core] not found; nested exception is java.lang.ClassNotFoundException: org.apache.xbean.spring.context.v2.XBeanNamespaceHandler
	at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:76)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:271)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:196)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:181)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:140)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:131)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:530)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:444)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from class path resource [conf/app-jms.xml]; nested exception is org.springframework.beans.FatalBeanException: NamespaceHandler class [org.apache.xbean.spring.context.v2.XBeanNamespaceHandler] for namespace [http://activemq.apache.org/schema/core] not found; nested exception is java.lang.ClassNotFoundException: org.apache.xbean.spring.context.v2.XBeanNamespaceHandler
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:412)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:255)
	... 63 more
Caused by: org.springframework.beans.FatalBeanException: NamespaceHandler class [org.apache.xbean.spring.context.v2.XBeanNamespaceHandler] for namespace [http://activemq.apache.org/schema/core] not found; nested exception is java.lang.ClassNotFoundException: org.apache.xbean.spring.context.v2.XBeanNamespaceHandler
	at org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.resolve(DefaultNamespaceHandlerResolver.java:135)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1418)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1413)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:184)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:140)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	... 66 more
Caused by: java.lang.ClassNotFoundException: org.apache.xbean.spring.context.v2.XBeanNamespaceHandler
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:430)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:383)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.resolve(DefaultNamespaceHandlerResolver.java:124)
	... 73 more
[TZ] 2018-08-16 10:45:14 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:45:15 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'outMailLinkmanService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'outMailUserSetingService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.mail.impl.MailService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'outMailUserSetingService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.mail.impl.MailService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:442)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.mail.impl.MailService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 70 more
[TZ] 2018-08-16 10:52:14 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:52:15 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mobileTaskService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.webservice.impl.ProcessServiceImpl] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.webservice.impl.ProcessServiceImpl] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
[TZ] 2018-08-16 10:54:17 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-16 10:54:20 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-16 10:54:21 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-16 10:54:21 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageConsumer' defined in class path resource [conf/app-jms.xml]: Cannot create inner bean 'com.casic.cloud.pub.jms.CloudSmsHandler#7cc55834' of type [com.casic.cloud.pub.jms.CloudSmsHandler] while setting bean property 'handlers' with key [TypedStringValue: value [com.cosim.core.model.SmsMobile], target type [null]]; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.casic.cloud.pub.jms.CloudSmsHandler] for bean with name 'com.casic.cloud.pub.jms.CloudSmsHandler#7cc55834' defined in class path resource [conf/app-jms.xml]; nested exception is java.lang.ClassNotFoundException: com.casic.cloud.pub.jms.CloudSmsHandler
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:282)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:121)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedMap(BeanDefinitionValueResolver.java:379)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.casic.cloud.pub.jms.CloudSmsHandler] for bean with name 'com.casic.cloud.pub.jms.CloudSmsHandler#7cc55834' defined in class path resource [conf/app-jms.xml]; nested exception is java.lang.ClassNotFoundException: com.casic.cloud.pub.jms.CloudSmsHandler
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:433)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:271)
	... 61 more
Caused by: java.lang.ClassNotFoundException: com.casic.cloud.pub.jms.CloudSmsHandler
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:430)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:383)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 63 more
[TZ] 2018-08-16 10:55:32 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:56:05 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-16 10:56:08 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-16 10:56:09 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-16 10:56:09 WARN  XmlWebApplicationContext: Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'cxf': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:212)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:148)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:86)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:327)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1037)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1000)
	at org.apache.cxf.bus.spring.SpringBus.destroyBeans(SpringBus.java:131)
	at org.apache.cxf.bus.CXFBusImpl.shutdown(CXFBusImpl.java:217)
	at org.apache.cxf.bus.CXFBusImpl.shutdown(CXFBusImpl.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:300)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:226)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:499)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:475)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:443)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1078)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
[TZ] 2018-08-16 10:56:09 WARN  XmlWebApplicationContext: Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: Root WebApplicationContext: startup date [Thu Aug 16 10:55:55 CST 2018]; root of context hierarchy
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:353)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1045)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1000)
	at org.apache.cxf.bus.spring.SpringBus.destroyBeans(SpringBus.java:131)
	at org.apache.cxf.bus.CXFBusImpl.shutdown(CXFBusImpl.java:217)
	at org.apache.cxf.bus.CXFBusImpl.shutdown(CXFBusImpl.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:300)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:226)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:499)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:475)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:443)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1078)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
[TZ] 2018-08-16 10:56:10 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'UserDetailsService': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.apache.cxf.jaxws22.spring.JAXWS22SpringEndpointImpl]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/ws/commons/schema/XmlSchemaAnnotated
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.apache.cxf.jaxws22.spring.JAXWS22SpringEndpointImpl]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/ws/commons/schema/XmlSchemaAnnotated
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:162)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:280)
	... 58 more
Caused by: java.lang.NoClassDefFoundError: org/apache/ws/commons/schema/XmlSchemaAnnotated
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.<init>(JaxWsServerFactoryBean.java:72)
	at org.apache.cxf.jaxws.EndpointImpl.<init>(EndpointImpl.java:151)
	at org.apache.cxf.jaxws.EndpointImpl.<init>(EndpointImpl.java:144)
	at org.apache.cxf.jaxws.EndpointImpl.<init>(EndpointImpl.java:158)
	at org.apache.cxf.jaxws.EndpointImpl.<init>(EndpointImpl.java:165)
	at org.apache.cxf.jaxws22.EndpointImpl.<init>(EndpointImpl.java:99)
	at org.apache.cxf.jaxws22.spring.JAXWS22SpringEndpointImpl.<init>(JAXWS22SpringEndpointImpl.java:41)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 60 more
Caused by: java.lang.ClassNotFoundException: org.apache.ws.commons.schema.XmlSchemaAnnotated
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:430)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:383)
	... 72 more
[TZ] 2018-08-16 11:00:27 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demensionService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cosim.core.keygenerator.impl.ActivitiIdGenerator] for bean with name 'idGenerator' defined in class path resource [conf/app-activiti.xml]; nested exception is java.lang.ClassNotFoundException: com.cosim.core.keygenerator.impl.ActivitiIdGenerator
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cosim.core.keygenerator.impl.ActivitiIdGenerator] for bean with name 'idGenerator' defined in class path resource [conf/app-activiti.xml]; nested exception is java.lang.ClassNotFoundException: com.cosim.core.keygenerator.impl.ActivitiIdGenerator
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1331)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:316)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:857)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
Caused by: java.lang.ClassNotFoundException: com.cosim.core.keygenerator.impl.ActivitiIdGenerator
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:430)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:383)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 71 more
[TZ] 2018-08-16 11:01:55 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-16 11:01:58 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-16 11:01:58 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-16 11:02:03 ERROR SpringMvcServlet: Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bpmIndexRebuildController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.scheduler.SchedulerService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:631)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:588)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:508)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:449)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:133)
	at javax.servlet.GenericServlet.init(GenericServlet.java:244)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:519)
	at org.eclipse.jetty.servlet.ServletHolder.doStart(ServletHolder.java:331)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:742)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:265)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.core.scheduler.SchedulerService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 61 more
[TZ] 2018-08-16 11:03:32 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'schedulerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [org.quartz.Scheduler] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [org.quartz.Scheduler] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 57 more
[TZ] 2018-08-16 11:05:12 ERROR ContextLoader  : Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'schedulerService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [org.quartz.Scheduler] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at com.cosim.core.web.listener.StartupListner.contextInitialized(StartupListner.java:24)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:775)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:767)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:435)
	at org.mortbay.jetty.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:394)
	at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:685)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:551)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403)
	at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:353)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [org.quartz.Scheduler] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 31 more
[TZ] 2018-08-16 11:07:33 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-16 11:07:36 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-16 11:07:37 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-16 11:08:02 ERROR SpringMvcServlet: Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'desktopController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.system.DesktopService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:631)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:588)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:508)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:449)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:133)
	at javax.servlet.GenericServlet.init(GenericServlet.java:244)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:519)
	at org.eclipse.jetty.servlet.ServletHolder.doStart(ServletHolder.java:331)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:742)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:265)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:435)
	at org.mortbay.jetty.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:394)
	at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:685)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:551)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403)
	at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:353)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.system.DesktopService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 35 more
[TZ] 2018-08-16 11:09:32 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-16 11:09:34 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-16 11:09:35 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-16 11:09:38 ERROR SpringMvcServlet: Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'desktopController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.system.DesktopService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:631)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:588)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:508)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:449)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:133)
	at javax.servlet.GenericServlet.init(GenericServlet.java:244)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:519)
	at org.eclipse.jetty.servlet.ServletHolder.doStart(ServletHolder.java:331)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:742)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:265)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:710)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:492)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:293)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:172)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:229)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)
	at org.eclipse.jetty.server.Server.doStart(Server.java:280)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:520)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:365)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:523)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No matching bean of type [com.cosim.platform.service.system.DesktopService] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:948)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:817)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:731)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:438)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:416)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:554)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:155)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:92)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:303)
	... 61 more
[TZ] 2018-08-16 11:11:42 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-16 11:11:45 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-16 11:11:45 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-17 14:18:50 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-17 14:18:52 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-17 14:18:52 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-17 14:18:52 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:18:52 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-17 14:18:52 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-17 14:18:52 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-17 14:18:52 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-17 14:18:53 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-17 14:18:53 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:20:30 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-17 14:20:31 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-17 14:20:31 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-17 14:20:31 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-17 14:20:32 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:20:38 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:20:38 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        sys_role role 
    left join
        sys_subsystem sys 
            on role.systemid=sys.systemid  
[TZ] 2018-08-17 14:20:38 INFO  sqlonly        : 
    SELECT
        role.*,sys.sysName as subSysName 
    FROM
        SYS_ROLE role 
    left join
        SYS_SUBSYSTEM sys 
            on role.systemId=sys.systemId  
    order by
        role.roleId desc limit 10 
[TZ] 2018-08-17 14:20:38 INFO  sqlonly        : 
    SELECT
        PAURID,PAURNAME,ALIASNAME,PAURVALUE,USERID 
    FROM
        SYS_PAUR 
    WHERE
        USERID=1 
        AND ALIASNAME='skin'  
[TZ] 2018-08-17 14:24:33 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-17 14:24:35 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-17 14:24:36 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-17 14:25:26 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:25:28 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:25:29 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        sys_role role 
    left join
        sys_subsystem sys 
            on role.systemid=sys.systemid  
[TZ] 2018-08-17 14:25:29 INFO  sqlonly        : 
    SELECT
        role.*,sys.sysName as subSysName 
    FROM
        SYS_ROLE role 
    left join
        SYS_SUBSYSTEM sys 
            on role.systemId=sys.systemId  
    order by
        role.roleId desc limit 10 
[TZ] 2018-08-17 14:25:29 INFO  sqlonly        : 
    SELECT
        PAURID,PAURNAME,ALIASNAME,PAURVALUE,USERID 
    FROM
        SYS_PAUR 
    WHERE
        USERID=1 
        AND ALIASNAME='skin'  
[TZ] 2018-08-17 14:25:39 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:25:39 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        sys_role role 
    left join
        sys_subsystem sys 
            on role.systemid=sys.systemid  
[TZ] 2018-08-17 14:25:39 INFO  sqlonly        : 
    SELECT
        role.*,sys.sysName as subSysName 
    FROM
        SYS_ROLE role 
    left join
        SYS_SUBSYSTEM sys 
            on role.systemId=sys.systemId  
    order by
        role.roleId desc limit 10 
[TZ] 2018-08-17 14:25:41 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:25:41 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        sys_role role 
    left join
        sys_subsystem sys 
            on role.systemid=sys.systemid  
[TZ] 2018-08-17 14:25:41 INFO  sqlonly        : 
    SELECT
        role.*,sys.sysName as subSysName 
    FROM
        SYS_ROLE role 
    left join
        SYS_SUBSYSTEM sys 
            on role.systemId=sys.systemId  
    order by
        role.roleId desc limit 10 
[TZ] 2018-08-17 14:27:41 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-17 14:27:44 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-17 14:27:45 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-17 14:28:11 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-17 14:28:15 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:28:15 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        sys_role role 
    left join
        sys_subsystem sys 
            on role.systemid=sys.systemid  
[TZ] 2018-08-17 14:28:15 INFO  sqlonly        : 
    SELECT
        role.*,sys.sysName as subSysName 
    FROM
        SYS_ROLE role 
    left join
        SYS_SUBSYSTEM sys 
            on role.systemId=sys.systemId  
    order by
        role.roleId desc limit 10 
[TZ] 2018-08-17 14:28:15 INFO  sqlonly        : 
    SELECT
        PAURID,PAURNAME,ALIASNAME,PAURVALUE,USERID 
    FROM
        SYS_PAUR 
    WHERE
        USERID=1 
        AND ALIASNAME='skin'  
[TZ] 2018-08-17 14:30:37 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-17 14:30:40 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-17 14:30:40 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-17 14:31:05 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-17 14:31:09 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:31:09 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        sys_role role 
    left join
        sys_subsystem sys 
            on role.systemid=sys.systemid  
[TZ] 2018-08-17 14:31:09 INFO  sqlonly        : 
    SELECT
        role.*,sys.sysName as subSysName 
    FROM
        SYS_ROLE role 
    left join
        SYS_SUBSYSTEM sys 
            on role.systemId=sys.systemId  
    order by
        role.roleId desc limit 10 
[TZ] 2018-08-17 14:31:09 INFO  sqlonly        : 
    SELECT
        PAURID,PAURNAME,ALIASNAME,PAURVALUE,USERID 
    FROM
        SYS_PAUR 
    WHERE
        USERID=1 
        AND ALIASNAME='skin'  
[TZ] 2018-08-17 14:31:31 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:31:31 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:31:31 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 10 
[TZ] 2018-08-17 14:31:32 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:31:32 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:31:32 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 20 
[TZ] 2018-08-17 14:36:10 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-17 14:36:12 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-17 14:36:13 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-17 14:36:30 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-17 14:36:32 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-17 14:36:33 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-17 14:36:59 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-17 14:37:02 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:37:02 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:37:02 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 10 
[TZ] 2018-08-17 14:37:03 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:37:03 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:37:03 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 20 
[TZ] 2018-08-17 14:37:53 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-17 14:37:55 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-17 14:37:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-17 14:37:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:37:55 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-17 14:37:55 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-17 14:37:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-17 14:37:55 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-17 14:37:56 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-17 14:37:56 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-17 14:38:18 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-17 14:38:21 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:38:44 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:38:44 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 10 
[TZ] 2018-08-17 14:38:44 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:38:44 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:38:44 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 20 
[TZ] 2018-08-17 14:38:53 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:39:58 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:39:58 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 10 
[TZ] 2018-08-17 14:39:58 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:39:58 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:39:58 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 20 
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-17 14:41:23 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:41:28 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:42:27 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:42:27 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 10 
[TZ] 2018-08-17 14:42:27 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:42:27 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        cloud_course 
[TZ] 2018-08-17 14:42:27 INFO  sqlonly        : 
    SELECT
        id,year,term,create_user,create_time,task_id,run_id,run_state 
    FROM
        cloud_course 
    order  by
        id desc limit 20 
[TZ] 2018-08-17 14:42:39 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-17 14:44:08 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-17 14:44:10 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-17 14:44:11 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-29 09:20:39 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-29 09:20:41 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-29 09:20:42 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-29 09:21:42 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-29 09:21:42 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-29 09:21:43 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-29 09:21:44 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 09:21:50 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 09:21:50 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    order by
        systemId desc 
[TZ] 2018-08-29 09:21:51 INFO  sqlonly        : 
    SELECT
        PAURID,PAURNAME,ALIASNAME,PAURVALUE,USERID 
    FROM
        SYS_PAUR 
    WHERE
        USERID=1 
        AND ALIASNAME='skin'  
[TZ] 2018-08-29 09:21:51 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 09:21:51 INFO  sqlonly        : 
    SELECT
        resId,resName,alias,sn,icon,parentId,defaultUrl,isFolder,isDisplayInMenu,isOpen,systemId,path,isHidden  
    FROM
        SYS_RES 
    WHERE
        systemId=4001 
        and (
            isHidden=0 
            or isHidden is null
        ) 
    ORDER BY
        sn 
[TZ] 2018-08-29 09:21:51 INFO  sqlonly        : 
    SELECT
        resId,resName,alias,sn,icon,parentId,defaultUrl,isFolder,isDisplayInMenu,isOpen,systemId,path,isHidden  
    FROM
        SYS_RES 
    WHERE
        resId=0 
[TZ] 2018-08-29 09:21:51 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-29 09:21:52 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 09:21:52 INFO  sqlonly        : 
    select
        count(*) amount 
    from
        sys_role role 
    left join
        sys_subsystem sys 
            on role.systemid=sys.systemid  
[TZ] 2018-08-29 09:21:52 INFO  sqlonly        : 
    SELECT
        role.*,sys.sysName as subSysName 
    FROM
        SYS_ROLE role 
    left join
        SYS_SUBSYSTEM sys 
            on role.systemId=sys.systemId  
    order by
        role.roleId desc limit 10 
[TZ] 2018-08-29 10:09:35 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-29 10:09:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-29 10:09:38 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-29 10:10:10 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
[TZ] 2018-08-29 18:06:36 INFO  sqlonly        : 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = 'schema.version' 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        isLocal=1 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=100 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=100 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=100 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=100 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4001 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4001 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4001 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4001  
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=4002 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=4002 
        and A.defaultUrl  is not null 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=4002 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=4002  
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=10000048030000 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=10000048030000  
        and A.defaultUrl is not null 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=10000048030000 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=10000048030000  
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.url as url,D.alias AS role 
    FROM
        SYS_RESURL A 
    INNER JOIN
        SYS_RES B 
            ON (
                A.resId=B.resId
            )  
    LEFT JOIN
        SYS_ROLE_RES C 
            ON (
                C.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE D 
            ON (
                D.roleId=C.roleId
            ) 
    WHERE
        B.systemId=50000002150057 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT A.defaultUrl url ,C.alias AS role 
    FROM
        SYS_RES A 
    LEFT JOIN
        SYS_ROLE_RES B 
            ON  (
                A.resId=B.resId
            ) 
    LEFT JOIN
        SYS_ROLE C 
            ON (
                B.roleId=C.roleId
            ) 
    WHERE
        A.systemId=50000002150057  
        and A.defaultUrl is not null 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        * 
    FROM
        SYS_ROLE 
    where
        systemId=50000002150057 
[TZ] 2018-08-29 18:06:37 INFO  sqlonly        : 
    SELECT
        DISTINCT C.alias AS role,A.alias AS func 
    FROM
        SYS_RES A 
    Left outer join
        SYS_ROLE_RES  B 
            on A.resId=B.resId 
    left outer join
        SYS_ROLE C 
            on B.roleId=C.roleId 
    where
        A.systemId=50000002150057  
[TZ] 2018-08-29 18:06:38 WARN  PermissionFilter: Could not validate configuration attributes as the SecurityMetadataSource did not return any attributes from getAllConfigAttributes()
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    SELECT
        userId,fullname,account,password,isExpired,isLock,createtime,status,email,mobile,phone,sex,picture,fromType,orgId,orgSn,shortAccount,orgType,typeId,typeName,code,refCode,security_level,isApply  
    from
        sys_user 
    where
        account='casiadmin' 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    select
        a.userOrgId,a.orgId,a.userId,a.isPrimary,a.isCharge,a.isGradeManage, b.orgName 
    from
        SYS_USER_ORG a 
    join
        SYS_ORG b 
            on a.orgid=b.orgid 
    where
        a.userid=1 
    order by
        userOrgId desc 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    SELECT
        a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType, a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,  c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn,a.fromType,a.orgstatus,a.issystem  
    FROM
        sys_org a 
    left join
        sys_org c 
            on a.orgSupId=c.orgId 
    join
        sys_demension b 
            on a.demId=b.demId  
    left join
        sys_user d 
            on a.creatorId=d.userId 
    left join
        sys_user u 
            on a.updateId=u.userId 
    where
        a.orgId=1000 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    SELECT
        systemId,sysName,alias,logo,defaultUrl,memo,createtime,creator,allowDel,needOrg,isActive,isLocal,homePage,namespace  
    FROM
        SYS_SUBSYSTEM 
    WHERE
        systemId=4001 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    select
        t.* 
    from
        ( select
            a.*,b.role_name as roleName,b.role_alias 
        from
            cloud_saas_user_role  a, cloud_saas_role b 
        where
            a.roleId=b.role_id 
            and a.userId = 1 
            and b.tenant_id=1000 
            and a.tenantId=1000  
        UNION
        all select
            a.*,b.roleName as roleName,b.alias as role_alias 
        from
            cloud_saas_user_role  a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
            and a.tenantId=1000 
            and b.roleId not  in(
                select
                    role_id 
                from
                    cloud_saas_role csr 
                where
                    csr.tenant_id=1000
            ) 
        UNION
        ALL select
            a.userRoleId  as SaasUserRoleId, a.roleId, a.userId, a.userId as tenantId ,b.roleName as roleName,b.alias  as role_alias 
        from
            sys_user_role a, sys_role b 
        where
            a.roleId=b.roleId 
            and a.userId = 1 
    ) t  
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=1000 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    select
        t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName"  ,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname 
    from
        sys_org_role t 
    left join
        sys_org m 
            on t.orgid=m.orgid 
    left join
        sys_role f 
            on t.roleid=f.roleid 
    left join
        sys_subsystem  sys 
            on f.systemId=sys.systemId 
    where
        t.orgid=100 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    SELECT
        SYS_ORG_INFO_ID,EMAIL,NAME,INDUSTRY,INDUSTRY2,SCALE,ADDRESS,POSTCODE,CONNECTER,TEL,FAX,HOMEPHONE,COUNTRY,STATE,REGISTERTIME,CREATETIME,setid,recommendedEnt,manageType  
    FROM
        SYS_ORG_INFO 
    WHERE
        SYS_ORG_INFO_ID=1000 
[TZ] 2018-08-29 18:07:11 INFO  sqlonly        : 
    SELECT
        DISTINCT tt.resId,tt.resName,tt.alias,tt.sn,tt.icon,tt.parentId,tt.defaultUrl,tt.isFolder,tt.isDisplayInMenu,tt.isOpen,tt.systemId,tt.isHidden  
    from
        ( SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            CLOUD_SAAS_ROLE_RES  role_res, SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.role_id 
                from
                    cloud_saas_role t 
                where
                    t.role_alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    ) 
            ) 
            AND role_res.resId=res.resId 
            AND res.systemId=4001 
            AND res.isDisplayInMenu=1 
            AND role_res.tenantId=1000  
        union
        all SELECT
            DISTINCT res.resId,res.resName,res.alias,res.sn,res.icon,res.parentId,res.defaultUrl,  res.isFolder,res.isDisplayInMenu,res.isOpen,res.systemId,res.isHidden 
        FROM
            sys_role_res role_res,  SYS_RES res 
        WHERE
            role_res.roleId in (
                select
                    t.roleId 
                from
                    sys_role t 
                where
                    t.alias in (
                        '第三方子系统演示_role_sys_admin','第三方子系统演示_role_tenant_admin','CASICLOUD_PORTAL_INNER_ROLE'  
                    )
                    and t.alias not in(
                        select
                            t1.role_alias 
                        from
                            cloud_saas_role t1 
                        where
                            t1.tenant_id=1000
                    ) 
                )  
                AND role_res.resId=res.resId 
                AND res.systemId=4001 
                AND res.isDisplayInMenu=1 
        )tt 
